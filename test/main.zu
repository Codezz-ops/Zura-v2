include "std";
include "std/math";

// !NOTE: The built in fib function can only go up to 255 without overflowing.
have start := clock();
while (have i := 0; i <= 400) : (i++) {
    info i;
    info toString(mathFastFib(i));
}

info (clock() - start);

// !NOTE: This version can go up to 1475 without becoming inf.
// have start := clock();
// class Solutions {
//     init() {
//         this.time := clock() - start;
//     }
//     fib(n) {
//        this.time;
//        return (1 / mathSqrt(5)) * (((1 + mathSqrt(5)) / 2)**n - ((1 - mathSqrt(5)) / 2)**n);
//     }
// }


// while (have i := 0; i < 1475) : (i++) {
//     info i;
//     info toString(Solutions().fib(i));
// }
// info Solutions().time;
